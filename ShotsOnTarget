#Create vector with all the dates up to today. The first date can be the start of the season.
dates <- gsub("-","",seq(as.Date("2021-08-01"), Sys.Date(), by="days"))

results <- fotmob_get_matches_by_date(date =dates)

#Only get matches in the Dutch Eredivisie. Change this to your liking.
filtered_results <- results %>%
  dplyr::select(primaryId, ccode, league_name = name, matches) %>%
  dplyr::filter(league_name == "Eredivisie", ccode == "NED")
  
  # one way of getting data out of the results
unnested_results <- filtered_results %>% 
  tidyr::unnest_longer(matches)

match_ids <- unnested_results %>% 
  dplyr::pull(matches) %>% 
  dplyr::pull(id)

match_details <- fotmob_get_match_details(c(match_ids))

#change NA to 0 for easy filtering.
match_details$expectedGoalsOnTarget[is.na(match_details$expectedGoalsOnTarget)] <- 0
match_details$expectedGoals[is.na(match_details$expectedGoals)] <- 0

df <- match_details %>% 
  filter(expectedGoalsOnTarget > 0) %>%
  mutate(Goal = ifelse(eventType == "Goal",1,0)) %>%
  filter(isOwnGoal != TRUE) %>%
  mutate(opp = ifelse(team==homeTeam,awayTeam,homeTeam))

ggplot(df,aes(onGoalShot$x,onGoalShot$y)) + 
  
  #Draw posts
  geom_segment(aes(x=0,xend=0,y=0,yend=0.66534392)) +
  geom_segment(aes(x=0.028571429,xend=0.028571429,y=0,yend=0.66534392 - 0.028571429)) +
  geom_segment(aes(x=2,xend=2,y=0,yend=0.66534392)) +
  geom_segment(aes(x=2-0.028571429,xend=2-0.028571429,y=0,yend=0.66534392 - 0.028571429)) +
  geom_segment(aes(x=0,xend=2,y=0.66534392,yend=0.66534392)) +
  geom_segment(aes(x=0.028571429,xend=2-0.028571429,y=0.66534392 - 0.028571429,yend=0.66534392 - 0.028571429)) +
  
  #fill circles
  scale_fill_manual(values = c("NA", "green4"),
                    labels = c("Save","Goal" )) +
  labs(size= "xGOT",
       fill= "",
       x="",
       y="",
       caption = "@RobinWilhelmus\ndata:Opta via FotMob",
       title = glue::glue("Shots on target against Eredivisie"),
       subtitle= glue::glue("Excluding penalties")) +
  
  #draw net
  geom_segment(aes(x=0.2,xend=.2,y=0,yend=0.66534392- 0.028571429), alpha =.007) +
  geom_segment(aes(x=0.4,xend=.4,y=0,yend=0.66534392- 0.028571429), alpha =.007) +
  geom_segment(aes(x=0.6,xend=.6,y=0,yend=0.66534392- 0.028571429), alpha =.007) +
  geom_segment(aes(x=0.8,xend=.8,y=0,yend=0.66534392- 0.028571429), alpha =.007) +
  geom_segment(aes(x=1,xend=1,y=0,yend=0.66534392- 0.028571429), alpha =.007) +
  geom_segment(aes(x=1.2,xend=1.2,y=0,yend=0.66534392- 0.028571429), alpha =.007) +
  geom_segment(aes(x=1.4,xend=1.4,y=0,yend=0.66534392- 0.028571429), alpha =.007) +
  geom_segment(aes(x=1.6,xend=1.6,y=0,yend=0.66534392- 0.028571429), alpha =.007) +
  geom_segment(aes(x=1.8,xend=1.8,y=0,yend=0.66534392- 0.028571429), alpha =.007) +
  
  geom_segment(aes(x=0.028571429,xend=2-0.028571429,y=.11,yend=.11), alpha =.007) +
  geom_segment(aes(x=0.028571429,xend=2-0.028571429,y=.22,yend=.22), alpha =.007) +
  geom_segment(aes(x=0.028571429,xend=2-0.028571429,y=.33,yend=.33), alpha =.007) +
  geom_segment(aes(x=0.028571429,xend=2-0.028571429,y=.44,yend=.44), alpha =.007) +
  geom_segment(aes(x=0.028571429,xend=2-0.028571429,y=.55,yend=.55), alpha =.007) +
  
  geom_segment(aes(x=-.2,xend=2.2,y=0,yend=0), alpha =1) +
  
  geom_point(shape = 21,aes(size=expectedGoalsOnTarget, fill = as.factor(Goal))) +
  scale_size(range = c(0, 10)) + #scales the circles
  
  guides(fill = guide_legend(label.position = "bottom",title.position = "top",override.aes = list(size=5)),
         size=guide_legend(label.position = "bottom",title.position = "top")) +
  facet_wrap(~team) + #change to facet_wrap(~opp) if you want shots conceded
  theme(text = element_text(family="Spartan-Medium"),
        panel.background =  element_rect(fill = "#EFEFEF"),
        plot.background =  element_rect(fill = "#EFEFEF"),
        legend.background =  element_rect(fill = "#EFEFEF"),
        legend.key = element_rect(fill = "#EFEFEF"),
        legend.position = "bottom",
        plot.caption = element_text(size=8,family="Spartan-Medium",color="green4"),
        plot.title=element_text(size=22),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank(),
        line = element_blank(),
        legend.key.height = unit(1, 'cm'),
        legend.title.align=0.5)


ggsave("sot.png", width = 16, height=9, device=png)
